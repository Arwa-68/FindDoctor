#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MedicalHistory")]
public partial class MedicalHistoryDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertPatient(Patient instance);
  partial void UpdatePatient(Patient instance);
  partial void DeletePatient(Patient instance);
  partial void InsertDepartment(Department instance);
  partial void UpdateDepartment(Department instance);
  partial void DeleteDepartment(Department instance);
  partial void InsertDoctor(Doctor instance);
  partial void UpdateDoctor(Doctor instance);
  partial void DeleteDoctor(Doctor instance);
  partial void InsertGender(Gender instance);
  partial void UpdateGender(Gender instance);
  partial void DeleteGender(Gender instance);
  partial void InsertBlood(Blood instance);
  partial void UpdateBlood(Blood instance);
  partial void DeleteBlood(Blood instance);
  partial void InsertMedicalRecord(MedicalRecord instance);
  partial void UpdateMedicalRecord(MedicalRecord instance);
  partial void DeleteMedicalRecord(MedicalRecord instance);
  #endregion
	
	public MedicalHistoryDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MedicalHistoryConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MedicalHistoryDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MedicalHistoryDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MedicalHistoryDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MedicalHistoryDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Patient> Patients
	{
		get
		{
			return this.GetTable<Patient>();
		}
	}
	
	public System.Data.Linq.Table<Department> Departments
	{
		get
		{
			return this.GetTable<Department>();
		}
	}
	
	public System.Data.Linq.Table<Doctor> Doctors
	{
		get
		{
			return this.GetTable<Doctor>();
		}
	}
	
	public System.Data.Linq.Table<Gender> Genders
	{
		get
		{
			return this.GetTable<Gender>();
		}
	}
	
	public System.Data.Linq.Table<Blood> Bloods
	{
		get
		{
			return this.GetTable<Blood>();
		}
	}
	
	public System.Data.Linq.Table<MedicalRecord> MedicalRecords
	{
		get
		{
			return this.GetTable<MedicalRecord>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patients")]
public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PatientID;
	
	private string _CivilID;
	
	private string _CivilIDPic;
	
	private string _FullName;
	
	private System.Nullable<int> _GenderID;
	
	private System.Nullable<System.DateTime> _Birthdate;
	
	private System.Nullable<int> _BloodType;
	
	private string _HealthHistory;
	
	private System.Nullable<System.Guid> _UserID;
	
	private System.Nullable<bool> _Approved;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIDChanging(int value);
    partial void OnPatientIDChanged();
    partial void OnCivilIDChanging(string value);
    partial void OnCivilIDChanged();
    partial void OnCivilIDPicChanging(string value);
    partial void OnCivilIDPicChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnGenderIDChanging(System.Nullable<int> value);
    partial void OnGenderIDChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnBloodTypeChanging(System.Nullable<int> value);
    partial void OnBloodTypeChanged();
    partial void OnHealthHistoryChanging(string value);
    partial void OnHealthHistoryChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    #endregion
	
	public Patient()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PatientID
	{
		get
		{
			return this._PatientID;
		}
		set
		{
			if ((this._PatientID != value))
			{
				this.OnPatientIDChanging(value);
				this.SendPropertyChanging();
				this._PatientID = value;
				this.SendPropertyChanged("PatientID");
				this.OnPatientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilID", DbType="NVarChar(50)")]
	public string CivilID
	{
		get
		{
			return this._CivilID;
		}
		set
		{
			if ((this._CivilID != value))
			{
				this.OnCivilIDChanging(value);
				this.SendPropertyChanging();
				this._CivilID = value;
				this.SendPropertyChanged("CivilID");
				this.OnCivilIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilIDPic", DbType="NVarChar(50)")]
	public string CivilIDPic
	{
		get
		{
			return this._CivilIDPic;
		}
		set
		{
			if ((this._CivilIDPic != value))
			{
				this.OnCivilIDPicChanging(value);
				this.SendPropertyChanging();
				this._CivilIDPic = value;
				this.SendPropertyChanged("CivilIDPic");
				this.OnCivilIDPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int")]
	public System.Nullable<int> GenderID
	{
		get
		{
			return this._GenderID;
		}
		set
		{
			if ((this._GenderID != value))
			{
				this.OnGenderIDChanging(value);
				this.SendPropertyChanging();
				this._GenderID = value;
				this.SendPropertyChanged("GenderID");
				this.OnGenderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Birthdate
	{
		get
		{
			return this._Birthdate;
		}
		set
		{
			if ((this._Birthdate != value))
			{
				this.OnBirthdateChanging(value);
				this.SendPropertyChanging();
				this._Birthdate = value;
				this.SendPropertyChanged("Birthdate");
				this.OnBirthdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="Int")]
	public System.Nullable<int> BloodType
	{
		get
		{
			return this._BloodType;
		}
		set
		{
			if ((this._BloodType != value))
			{
				this.OnBloodTypeChanging(value);
				this.SendPropertyChanging();
				this._BloodType = value;
				this.SendPropertyChanged("BloodType");
				this.OnBloodTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthHistory", DbType="NVarChar(MAX)")]
	public string HealthHistory
	{
		get
		{
			return this._HealthHistory;
		}
		set
		{
			if ((this._HealthHistory != value))
			{
				this.OnHealthHistoryChanging(value);
				this.SendPropertyChanging();
				this._HealthHistory = value;
				this.SendPropertyChanged("HealthHistory");
				this.OnHealthHistoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
	public System.Nullable<bool> Approved
	{
		get
		{
			return this._Approved;
		}
		set
		{
			if ((this._Approved != value))
			{
				this.OnApprovedChanging(value);
				this.SendPropertyChanging();
				this._Approved = value;
				this.SendPropertyChanged("Approved");
				this.OnApprovedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DepartMentID;
	
	private string _DepartMentName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartMentIDChanging(int value);
    partial void OnDepartMentIDChanged();
    partial void OnDepartMentNameChanging(string value);
    partial void OnDepartMentNameChanged();
    #endregion
	
	public Department()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartMentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DepartMentID
	{
		get
		{
			return this._DepartMentID;
		}
		set
		{
			if ((this._DepartMentID != value))
			{
				this.OnDepartMentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartMentID = value;
				this.SendPropertyChanged("DepartMentID");
				this.OnDepartMentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartMentName", DbType="NVarChar(150)")]
	public string DepartMentName
	{
		get
		{
			return this._DepartMentName;
		}
		set
		{
			if ((this._DepartMentName != value))
			{
				this.OnDepartMentNameChanging(value);
				this.SendPropertyChanging();
				this._DepartMentName = value;
				this.SendPropertyChanged("DepartMentName");
				this.OnDepartMentNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctors")]
public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DoctorID;
	
	private string _CivilID;
	
	private string _CivilIDPic;
	
	private string _FullName;
	
	private System.Nullable<int> _GenderID;
	
	private System.Nullable<int> _DeptID;
	
	private System.Nullable<System.DateTime> _Birthdate;
	
	private System.Nullable<System.Guid> _UserID;
	
	private System.Nullable<bool> _Approved;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIDChanging(int value);
    partial void OnDoctorIDChanged();
    partial void OnCivilIDChanging(string value);
    partial void OnCivilIDChanged();
    partial void OnCivilIDPicChanging(string value);
    partial void OnCivilIDPicChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnGenderIDChanging(System.Nullable<int> value);
    partial void OnGenderIDChanged();
    partial void OnDeptIDChanging(System.Nullable<int> value);
    partial void OnDeptIDChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    #endregion
	
	public Doctor()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DoctorID
	{
		get
		{
			return this._DoctorID;
		}
		set
		{
			if ((this._DoctorID != value))
			{
				this.OnDoctorIDChanging(value);
				this.SendPropertyChanging();
				this._DoctorID = value;
				this.SendPropertyChanged("DoctorID");
				this.OnDoctorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilID", DbType="NVarChar(50)")]
	public string CivilID
	{
		get
		{
			return this._CivilID;
		}
		set
		{
			if ((this._CivilID != value))
			{
				this.OnCivilIDChanging(value);
				this.SendPropertyChanging();
				this._CivilID = value;
				this.SendPropertyChanged("CivilID");
				this.OnCivilIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilIDPic", DbType="NVarChar(50)")]
	public string CivilIDPic
	{
		get
		{
			return this._CivilIDPic;
		}
		set
		{
			if ((this._CivilIDPic != value))
			{
				this.OnCivilIDPicChanging(value);
				this.SendPropertyChanging();
				this._CivilIDPic = value;
				this.SendPropertyChanged("CivilIDPic");
				this.OnCivilIDPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int")]
	public System.Nullable<int> GenderID
	{
		get
		{
			return this._GenderID;
		}
		set
		{
			if ((this._GenderID != value))
			{
				this.OnGenderIDChanging(value);
				this.SendPropertyChanging();
				this._GenderID = value;
				this.SendPropertyChanged("GenderID");
				this.OnGenderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="Int")]
	public System.Nullable<int> DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Birthdate
	{
		get
		{
			return this._Birthdate;
		}
		set
		{
			if ((this._Birthdate != value))
			{
				this.OnBirthdateChanging(value);
				this.SendPropertyChanging();
				this._Birthdate = value;
				this.SendPropertyChanged("Birthdate");
				this.OnBirthdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
	public System.Nullable<bool> Approved
	{
		get
		{
			return this._Approved;
		}
		set
		{
			if ((this._Approved != value))
			{
				this.OnApprovedChanging(value);
				this.SendPropertyChanging();
				this._Approved = value;
				this.SendPropertyChanged("Approved");
				this.OnApprovedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genders")]
public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _GenderID;
	
	private string _GenderName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnGenderNameChanging(string value);
    partial void OnGenderNameChanged();
    #endregion
	
	public Gender()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int GenderID
	{
		get
		{
			return this._GenderID;
		}
		set
		{
			if ((this._GenderID != value))
			{
				this.OnGenderIDChanging(value);
				this.SendPropertyChanging();
				this._GenderID = value;
				this.SendPropertyChanged("GenderID");
				this.OnGenderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderName", DbType="NVarChar(50)")]
	public string GenderName
	{
		get
		{
			return this._GenderName;
		}
		set
		{
			if ((this._GenderName != value))
			{
				this.OnGenderNameChanging(value);
				this.SendPropertyChanging();
				this._GenderName = value;
				this.SendPropertyChanged("GenderName");
				this.OnGenderNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bloods")]
public partial class Blood : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BloodID;
	
	private string _BloodName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBloodIDChanging(int value);
    partial void OnBloodIDChanged();
    partial void OnBloodNameChanging(string value);
    partial void OnBloodNameChanged();
    #endregion
	
	public Blood()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int BloodID
	{
		get
		{
			return this._BloodID;
		}
		set
		{
			if ((this._BloodID != value))
			{
				this.OnBloodIDChanging(value);
				this.SendPropertyChanging();
				this._BloodID = value;
				this.SendPropertyChanged("BloodID");
				this.OnBloodIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodName", DbType="NVarChar(50)")]
	public string BloodName
	{
		get
		{
			return this._BloodName;
		}
		set
		{
			if ((this._BloodName != value))
			{
				this.OnBloodNameChanging(value);
				this.SendPropertyChanging();
				this._BloodName = value;
				this.SendPropertyChanged("BloodName");
				this.OnBloodNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalRecords")]
public partial class MedicalRecord : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MedicalRedordID;
	
	private System.Nullable<System.DateTime> _Dte;
	
	private System.Nullable<int> _DoctorID;
	
	private System.Nullable<int> _DeptID;
	
	private string _CaseDescription;
	
	private System.Nullable<int> _PatientID;
	
	private string _PaitnetFile;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicalRedordIDChanging(int value);
    partial void OnMedicalRedordIDChanged();
    partial void OnDteChanging(System.Nullable<System.DateTime> value);
    partial void OnDteChanged();
    partial void OnDoctorIDChanging(System.Nullable<int> value);
    partial void OnDoctorIDChanged();
    partial void OnDeptIDChanging(System.Nullable<int> value);
    partial void OnDeptIDChanged();
    partial void OnCaseDescriptionChanging(string value);
    partial void OnCaseDescriptionChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnPaitnetFileChanging(string value);
    partial void OnPaitnetFileChanged();
    #endregion
	
	public MedicalRecord()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalRedordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MedicalRedordID
	{
		get
		{
			return this._MedicalRedordID;
		}
		set
		{
			if ((this._MedicalRedordID != value))
			{
				this.OnMedicalRedordIDChanging(value);
				this.SendPropertyChanging();
				this._MedicalRedordID = value;
				this.SendPropertyChanged("MedicalRedordID");
				this.OnMedicalRedordIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dte", DbType="DateTime")]
	public System.Nullable<System.DateTime> Dte
	{
		get
		{
			return this._Dte;
		}
		set
		{
			if ((this._Dte != value))
			{
				this.OnDteChanging(value);
				this.SendPropertyChanging();
				this._Dte = value;
				this.SendPropertyChanged("Dte");
				this.OnDteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="Int")]
	public System.Nullable<int> DoctorID
	{
		get
		{
			return this._DoctorID;
		}
		set
		{
			if ((this._DoctorID != value))
			{
				this.OnDoctorIDChanging(value);
				this.SendPropertyChanging();
				this._DoctorID = value;
				this.SendPropertyChanged("DoctorID");
				this.OnDoctorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptID", DbType="Int")]
	public System.Nullable<int> DeptID
	{
		get
		{
			return this._DeptID;
		}
		set
		{
			if ((this._DeptID != value))
			{
				this.OnDeptIDChanging(value);
				this.SendPropertyChanging();
				this._DeptID = value;
				this.SendPropertyChanged("DeptID");
				this.OnDeptIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseDescription", DbType="NVarChar(MAX)")]
	public string CaseDescription
	{
		get
		{
			return this._CaseDescription;
		}
		set
		{
			if ((this._CaseDescription != value))
			{
				this.OnCaseDescriptionChanging(value);
				this.SendPropertyChanging();
				this._CaseDescription = value;
				this.SendPropertyChanged("CaseDescription");
				this.OnCaseDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
	public System.Nullable<int> PatientID
	{
		get
		{
			return this._PatientID;
		}
		set
		{
			if ((this._PatientID != value))
			{
				this.OnPatientIDChanging(value);
				this.SendPropertyChanging();
				this._PatientID = value;
				this.SendPropertyChanged("PatientID");
				this.OnPatientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaitnetFile", DbType="NVarChar(50)")]
	public string PaitnetFile
	{
		get
		{
			return this._PaitnetFile;
		}
		set
		{
			if ((this._PaitnetFile != value))
			{
				this.OnPaitnetFileChanging(value);
				this.SendPropertyChanging();
				this._PaitnetFile = value;
				this.SendPropertyChanged("PaitnetFile");
				this.OnPaitnetFileChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
